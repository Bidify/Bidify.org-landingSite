version: '3.8'

services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    restart: unless-stopped
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-your-email@example.com}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --api.insecure=false
      - --api.dashboard=true
      - --log.level=${LOG_LEVEL:-INFO}
      - --accesslog=true
      - --accesslog.format=json
      - --accesslog.fields.defaultmode=keep
      - --accesslog.fields.headersnames=Origin,X-Forwarded-For,X-Forwarded-Proto,X-Real-IP
      - --global.sendanonymoususage=false
    ports:
      - "80:80"
      - "443:443"
      # Optional: Dashboard on port 8080 (disable in production)
      # - "8080:8080"
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - web
    labels:
      - traefik.enable=true
      # Dashboard access (optional - secure with authentication)
      - traefik.http.routers.traefik.rule=Host(`traefik.bidify.me`)
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.services.traefik.loadbalancer.server.port=888
      # Basic auth for dashboard (optional)
      # - traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_AUTH_USERS}
      # - traefik.http.routers.traefik.middlewares=traefik-auth
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Monitoring services
  whoami:
    image: containous/whoami
    container_name: whoami
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`whoami.bidify.me`)
      - traefik.http.routers.whoami.entrypoints=websecure
      - traefik.http.routers.whoami.tls.certresolver=letsencrypt
      - traefik.http.services.whoami.loadbalancer.server.port=80
    networks:
      - web

networks:
  web:
    external: true